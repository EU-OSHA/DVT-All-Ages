define(function(require){"use strict";function nextId(){return sequence++}function ZylkShapeDirective(dataService,mapProvider,$log,dvtUtils){return{restrict:"E",require:["^zylkDashboard"],priority:6,transclude:!0,scope:{postFetch:"=",promise:"=",countryKey:"=",groupKey:"=",groupColor:"=",groupList:"=",clickAction:"="},template:'<div data-ng-class="{{ divClass }}" data-ng-attr-id="{{ id }}"></div>',controller:["$scope","mapProvider","dataService","$attrs","$state",function($scope,mapProvider,dataService,$attrs,$state){state=$state.current.name,$scope.getTooltipGroup=function(countryKey){var group=$scope.groupList[countryKey];return group||"No group"},$scope.promises={},$scope.countryKey?($scope.promises.countryKey=dataService.getGroupId($scope.countryKey),$scope.promises.countryKey.then(function(data){$scope.groupId=data.data.resultset[0],dataService.getCountries($scope.groupId).then(function(data){$scope.group=data.resultset})}).catch(function(err){})):$scope.groupKey&&($scope.promises.groupKey=dataService.getCountries($scope.groupId),$scope.groupId=$scope.groupKey,$scope.promises.groupKey.then(function(data){$scope.group=data.resultset})),$scope.map={},$log.debug("I'm-------------------MAP")}],link:function(scope,element,attributes,controllers){var dashboard=controllers[0];scope.id="zylk_map"+nextId(),scope.promise?scope.promise.then(function(map){scope.divClass=attributes.cssClass;var map=map.data,country=attributes.country;if(attributes.isColored)var isColoredMap=0!==attributes.isColored;if("EU"!==country)map={shapes:{country:map.shapes[country]},names:{country:map.names[country]}};else var sCountry=map.names[scope.countryKey];var definition={type:"raphaelComponent",name:scope.id,priority:attributes.priority||100,parameters:[],executeAtStart:!0,width:attributes.width||1e3,height:attributes.height||600,htmlObject:scope.id,listeners:[],customfunction:function(){Raphael.fn.map=function(){function labelPath(pathObj,text,textattr){void 0==textattr&&(textattr=mapProvider.getLabelDefinition);var bbox=pathObj.getBBox(),textObj=pathObj.paper.text(bbox.x+bbox.width/2,bbox.y+bbox.height/2,text).attr(textattr);return textObj.id=pathObj.id,noEU.indexOf(pathObj.id)<0&&(textObj.click(clicked),$log.debug("Country ID: "+pathObj.id)),textObj}$log.debug("Start Raphael");var noEU=mapProvider.getNotEUCountries(),colorIndex=parseInt(attributes.colorIndex)||1,backgroundShapeColor="EU"!==attributes.country||attributes.csp?dvtUtils.getColorCountry(colorIndex):attributes.backgroundShapeColor||dvtUtils.getEUMapBaseColor(),strokeShapeColor=attributes.strokeColor||"EU"===attributes.country?"#fff":backgroundShapeColor,groupColor=scope.groupColor||(scope.groupId?dvtUtils.getGroupColor(scope.groupId[0].toString()):dvtUtils.getEUMapBaseColor()),selectedCountryColor=attributes.selectedCountryColor||dvtUtils.getColorCountry(colorIndex),over=function(e){if(noEU.indexOf(this.id)<0){this.animate({opacity:.5},100),$log.debug("Tooltip group is: ");var tooltipGroup=scope.getTooltipGroup(this.id);$log.debug(tooltipGroup);var bbox=this.getBBox(),tooltipConf=mapProvider.getTooltipConfiguration();this._label=this.paper.rect(bbox.x+bbox.width/2,bbox.y+bbox.height/2,tooltipConf.width,tooltipConf.height),this._label.animate({fill:tooltipConf.backColor,"fill-opacity":tooltipConf.backOpacity,stroke:tooltipConf.strokeColor},0);var lbox=this._label.getBBox();this._label.group=this._label.paper.text(lbox.x+lbox.width/2,lbox.y+lbox.height/2.85,"GROUP "+tooltipGroup.group).animate({"font-size":tooltipConf.fontSize,stroke:tooltipConf.fontColor,"font-weight":"bold",fill:tooltipConf.fontColor,font:"Open Sans"},0),this._label.country=this._label.paper.text(lbox.x+lbox.width/2,lbox.y+lbox.height/1.25,this.label).animate({"font-size":tooltipConf.fontSize,stroke:"none",font:"Open Sans"},0)}},out=function(){noEU.indexOf(this.id)<0&&(this.animate({opacity:1},100),this._label.group.remove(),this._label.country.remove(),this._label.remove())},clicked=scope.clickAction||void 0;this.setStart();var paths=[];for(var index in map.shapes){var shape=map.shapes[index],cName=map.names[index],path=this.path(shape);scope.group;path.label=cName,path.id=index;var isInGroup=!1;scope.groupId&&(isInGroup=scope.getTooltipGroup(index).group==scope.groupId[0]),isInGroup&&isColoredMap?(path.attr({stroke:strokeShapeColor,fill:groupColor,"stroke-opacity":1}),path.group=1,cName===sCountry&&(path.attr({stroke:strokeShapeColor,fill:selectedCountryColor,"stroke-opacity":1}),path.group=1)):(noEU.indexOf(path.id)<0||attributes.csp?path.attr({stroke:strokeShapeColor,fill:backgroundShapeColor,"stroke-opacity":1}):path.attr({stroke:backgroundShapeColor,fill:"#F0F0F0","stroke-opacity":1}),path.group=0),scope.legend&&labelPath(path,cName).attr({fill:groupColor}),paths.push(path),attributes.clickable&&"1"==attributes.clickable&&noEU.indexOf(path.id)<0&&(path.click(clicked),path.attr({cursor:"pointer"}))}var countryMap=this.setFinish();attributes.hover&&countryMap.hover(over,out);var colorAux="";if(attributes.legend&&"1"==attributes.legend)for(var country in paths){colorAux=groupColor;var current=paths[country];colorAux=1==current.group?backgroundShapeColor:groupColor,labelPath(current,current.label).attr({fill:colorAux})}};var paper=Raphael(scope.id,attributes.width||200,attributes.height||200);paper.setViewBox(attributes.x||0,attributes.y||0,attributes.zoomH||640,attributes.zoomW||640,!1);var svg=document.querySelector("#"+scope.id+" svg");svg.removeAttribute("width"),configService.isIE()||svg.removeAttribute("height"),"country-profiles"!=state&&svg.setAttribute("style","width:76%"),paper.canvas.setAttribute("preserveAspectRatio","xMaxYMin"),paper.map()}};if(scope.params&&(definition.parameters=scope.params),scope.listenTo)for(var listen in scope.listenTo)definition.listeners[listen]=scope.listenTo[listen];attributes.hover&&(scope.hover=1==attributes.hover),scope.postFetch&&(definition.postFetch=scope.postFetch),attributes.width&&(scope.width=attributes.width),attributes.height&&(scope.height=attributes.height),attributes.x&&(scope.x=attributes.x),attributes.y&&(scope.y=attributes.y);var chart=new RaphaelComponent(definition);dashboard.register(chart),chart.postExecution=function(){this.width=this.placeholder().width()},$log.debug("Link function of "+scope.id)}):$log.error("Link function of "+scope.id+": Promise is undefined")}}}var state,RaphaelComponent=require("cde/components/RaphaelComponent"),configService=require("horizontal/config/configService"),sequence=1;return ZylkShapeDirective.$inject=["dataService","mapProvider","$log","dvtUtils"],ZylkShapeDirective});